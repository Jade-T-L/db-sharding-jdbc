mybatis:
  mapper-locations: classpath*:com/zhuzi/dbshardingjdbc/mapper/*.xml
  type-aliases-package: com.zhuzi.dbshardingjdbc.model

spring:
  shardingsphere:
    # 将运行模式配置为Standalone单机模式（Cluster：集群模式）
    mode:
      type: Standalone
      repository:
        type: JDBC

    # 配置多数据源
    datasource:
      # 为多个数据源配置别名
      names: ds0,ds1
      # 配置第一个数据源的详情
      ds0:
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/db_shardingjdbc_01?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: 123QWEasd
      # 配置第二个数据源的详情
      ds1:
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/db_shardingjdbc_02?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: 123QWEasd

    # 执行时显示SQL语句
    props:
      # 日志显示具体的SQL
      sql-show: true

    # 配置分片规则
    rules:
      # 配置分片策略
      sharding:
        # 配置所有分片表
        tables:
          # 配置用户详情表的分片策略
          user_info:
            # 声明用户详情表所在的真实数据节点（ds0.user_info、ds1.user_info）
            actual-data-nodes: ds$->{0..1}.user_info

            # 配置订单表表的主键生成策略
            key-generate-strategy:
              # 声明主键为user_id
              column: user_id
              # 同样使用之前的雪花算法
              keygenerator-name: global-id-snowflake

        # 这里统一配置所有的主键生成策略
        key-generators:
          # 配置上面的主键生成策略
          global-id-snowflake:
            # 选择使用内置的雪花算法
            type: SNOWFLAKE
            props:
              # 分配一个工作节点ID（要确保全局唯一）
              worker-id: 111

        # 配置广播表信息
        broadcast-tables:
          - user_info